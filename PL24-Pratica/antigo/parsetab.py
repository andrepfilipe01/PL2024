
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE DOLLAR LPAR MINUS NUMBER PLUS RPAR TIMES\n    statement : expression endmarker\n              | statement expression\n    \n    endmarker : DOLLAR\n    \n    expression : expression expression operator\n               | NUMBER\n    \n    operator : PLUS\n             | MINUS\n             | TIMES\n             | DIVIDE\n    '
    
_lr_action_items = {'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,],[3,3,3,-5,3,3,-1,-3,-4,-6,-7,-8,-9,]),'$end':([1,3,4,6,7,8,9,10,11,12,],[0,-5,-2,-1,-3,-4,-6,-7,-8,-9,]),'DOLLAR':([2,3,8,9,10,11,12,],[7,-5,-4,-6,-7,-8,-9,]),'PLUS':([3,5,8,9,10,11,12,],[-5,9,-4,-6,-7,-8,-9,]),'MINUS':([3,5,8,9,10,11,12,],[-5,10,-4,-6,-7,-8,-9,]),'TIMES':([3,5,8,9,10,11,12,],[-5,11,-4,-6,-7,-8,-9,]),'DIVIDE':([3,5,8,9,10,11,12,],[-5,12,-4,-6,-7,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,1,2,4,5,],[2,4,5,5,5,]),'endmarker':([2,],[6,]),'operator':([5,],[8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression endmarker','statement',2,'p_statement','calculo_sin2.py',10),
  ('statement -> statement expression','statement',2,'p_statement','calculo_sin2.py',11),
  ('endmarker -> DOLLAR','endmarker',1,'p_endmarker','calculo_sin2.py',17),
  ('expression -> expression expression operator','expression',3,'p_expression','calculo_sin2.py',22),
  ('expression -> NUMBER','expression',1,'p_expression','calculo_sin2.py',23),
  ('operator -> PLUS','operator',1,'p_operator','calculo_sin2.py',45),
  ('operator -> MINUS','operator',1,'p_operator','calculo_sin2.py',46),
  ('operator -> TIMES','operator',1,'p_operator','calculo_sin2.py',47),
  ('operator -> DIVIDE','operator',1,'p_operator','calculo_sin2.py',48),
]
